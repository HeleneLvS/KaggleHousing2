table(x$GarageType)
unique(x$GarageType)
x<-subset(gar,is.na(GarageYrBlt) ==TRUE)
table(x$GarageType)
subset(x, GarageType == "Detchd")
subset(x, GarageType == "Detchd")
table(x$GarageType)
data_fg$GarageType<-case_when(is.na(data_f$GarageYrBlt)==TRUE ~ "None", TRUE ~ data_f$GarageType)
gar<-data_f[,c(59:65,78,81)]
gar$GarageType<-case_when(is.na(gar$GarageYrBlt)==TRUE ~ "None", TRUE ~ gar$GarageType)
summary(gar)
table(gar$GarageType)
table(gar$GarageFinish)
gar$GarageType<-as.factor(case_when(is.na(gar$GarageYrBlt)==TRUE ~ "None", TRUE ~ gar$GarageType))
summary(gar)
x
table(x$GarageType)
gar$GarageType<-as.factor(case_when(is.na(gar$GarageYrBlt)==TRUE ~ "None", TRUE ~ gar$GarageType))
x<-subset(gar,is.na(GarageYrBlt) ==TRUE)
table(x$GarageType)
subset(x, GarageType == "Detchd")
summary(gar)
gar$GarageYrBlt<-case_when(data_f$GarageYrBlt > data_f$YrSold ~ data_f$YrSold)
summary(gar)
gar<-data_f[,c(59:65,78,81)]
x<-subset(gar,is.na(GarageYrBlt) ==TRUE)
table(x$GarageType)
subset(x, GarageType == "Detchd")
gar$GarageType<-as.factor(case_when(is.na(gar$GarageYrBlt)==TRUE ~ "None", TRUE ~ gar$GarageType))
gar$GarageYrBlt<-case_when(data_f$GarageYrBlt > data_f$YrSold ~ data_f$YrSold,
TRUE ~data_f$GarageYrBlt)
summary(gar)
year(now())
gar$GarageYrBlt<-case_when(data_f$GarageYrBlt > data_f$YrSold ~ data_f$YrSold,
is.na(data_f$GarageYrBlt) == TRUE ~ (year(now())+1),
TRUE ~data_f$GarageYrBlt)
summary(gar)
x<-subset(gar,is.na(GarageFinish) ==TRUE)
x
table(x$GarageFinish)
gar<-data_f[,c(59:65,78,81)]
head(arrange(gar,desc(GarageYrBlt)))
gar<-data_f[,c(59:65,78,81)]
x<-subset(gar,is.na(GarageFinish) == TRUE)
table(x$GarageFinish)
table(gar$GarageFinish)
x<-subset(gar,is.na(GarageCars) == TRUE)
x
x<-subset(gar,is.na(GarageAreas) == TRUE)
x<-subset(gar,is.na(GarageArea) == TRUE)
x
x<-subset(gar,is.na(GarageQual) == TRUE)
x<-subset(gar,is.na(GarageCond) == TRUE)
table(gar$GarageCond)
options(scipen=999) ###No scientific notifications
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message =  FALSE)
##clean out the space
rm(list=ls())
options(scipen=999)
##What do we need
library(tidyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(cowplot) # plot different ggplots next to each other
library(DataExplorer) # Best EDA package by far
library(corrplot)
library(pscl) # For Pseudo R squareds on GLMS
#Where will we work
#getwd()
setwd("C:/Users/helen/Documents/Kaggle/HousePrice/KaggleHousing")
train<-read.csv("train.csv")
train['Type']<-'train_set'
test<-read.csv("test.csv")
test['SalePrice'] <- NA
test['Type']<-'test_set'
data<-rbind(train,test)
#create_report(train)
#create_report(data)
plot_intro(data)
plot_missing(data)
#Fill in the NA's where they represent 'None Present' with 'None'
data_f<-data
data_f$BsmtQual<- case_when(
(is.na(data$BsmtQual) == TRUE & data$TotalBsmtSF >= 0) ~ data$BsmtCond,
(is.na(data$BsmtQual) == TRUE & data$TotalBsmtSF == 0) ~ "None",
TRUE~data$BsmtQual
)
data_f$BsmtCond<- case_when(
(is.na(data$BsmtCond) == TRUE & data$TotalBsmtSF > 0) ~ "TA",
(is.na(data$BsmtCond) == TRUE & data$TotalBsmtSF == 0) ~ "None",
TRUE~data$BsmtCond
)
data_f$BsmtExposure<-case_when(
(is.na(data$BsmtExposure) == TRUE & data$TotalBsmtSF > 1000) ~ "Av",
(is.na(data$BsmtExposure) == TRUE & data$TotalBsmtSF > 0
& data$TotalBsmtSF <= 1000) ~ "No",
(is.na(data$BsmtExposure) == TRUE & data$TotalBsmtSF == 0) ~ "None",
TRUE~data$BsmtExposure
)
data_f$BsmtFinType2<-case_when(
(is.na(data$BsmtFinType2) == TRUE & data$TotalBsmtSF > 0)~ "ALQ",
(is.na(data$BsmtFinType2) == TRUE & data$TotalBsmtSF == 0) ~ "None",
TRUE~data$BsmtFinType2
)
data_f<-data_f %>%
replace_na(list(Alley = "None", BsmtQual ="None", BsmtExposure = "None",
BsmtCond= "None", BsmtFinType1="None", BsmtFinType2="None",
FireplaceQu = "None",
GarageType = "None",GarageFinish = "None",
GarageQual="None", GarageCond="None",
PoolQC="None", Fence = "None", GarageQual="None",
GarageCond = "None", PoolQC = "None", MiscFeature = "None",
MasVnrType = "None"))
#names(data_f[,31:39])
data_f<-data_f %>%
replace_na(list(GarageCars = 0,
GarageArea = 0,
BsmtFinSF1 = 0,
BsmtFinSF2 = 0,
BsmtUnfSF = 0 ,
TotalBsmtSF = 0,
BsmtFullBath = 0,
BsmtHalfBath = 0))
## Add this bit for another set: LotFrontage = 0, if the above gives a poor result
##IMPUTE LOTFRONTAGE
## Predict the LotFrontage based on total sqft and Configuration of the lot with m.lf
data_ltz<-subset(data_f, is.na(LotFrontage)==FALSE)
m.lf <- glm(LotFrontage~LotArea+LotConfig, Gamma(link="log"), data = data_ltz)
remove(data_ltz)
newdata<-data_f
newdata$LotFrontageHat<- predict(m.lf,newdata,type="response")
iqr<-IQR(newdata$LotFrontage,na.rm=TRUE)
q3<-quantile(newdata$LotFrontage, probs=c(0.75), na.rm=TRUE)
#Cap it
newdata$LotFrontageHat<-case_when(
newdata$LotFrontageHat >= (q3+3*iqr) ~ (q3+3*iqr),
TRUE ~newdata$LotFrontageHat
)
remove(iqr)
remove(q3)
#Impute it
newdata$LotFrontageF<-case_when(
is.na(newdata$LotFrontage)==TRUE ~ round(newdata$LotFrontageHat,0),
TRUE ~newdata$LotFrontage)
newdata$Cat<-case_when(
is.na(newdata$LotFrontage)==TRUE ~ "Impute",
TRUE ~ "Original")
#Add it back to the dataset we are cleaning
data_f$LotFrontage<-newdata$LotFrontageF
data_f$LotFCat<-newdata$Cat
remove(newdata)
#create_report(data_f)
plot_intro(data_f)
plot_missing(data_f)
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$GarageYrBlt
yy=data_f$SalePrice
#x2 = data_f$HeatingQC
summary(xx)
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
subset(data_f, is.na(Functional)== TRUE )
#ggplot(data=data_f, aes(x=Exterior1st, fill = Exterior2nd, y = 1 ) )+
#  geom_bar(position="fill", stat="identity")
#ggplot(data=data_f, aes(x=x2, fill = xx, y = 1 ) )+
#  geom_bar(position="fill", stat="identity")
#ggplot(data=data_fg, aes(x=xx, y=LotFrontageF))+
#  geom_boxplot()
#library(correlation)
#correlation::correlation(data_f, include_factors = TRUE, method = "auto")
gar<-data_f[,c(59:65,78,81)]
head(arrange(gar,desc(GarageYrBlt)))
x<-subset(gar,is.na(GarageCond) == TRUE)
table(gar$GarageCond)
summary(gar)
plot_missing(gar)
##Regroup poorly represented factor levels
#Data_fg will be the set that is used for modelling
#HELENE FIX AND CLEAN BELOW
#plot_missing(data_f[,1:12])
rm(data_fg)
#data_fg<-data_f
data_fg<-data_f[,81:82]
#Resulting factor changes
data_fg$Era<-as.factor(case_when(data_f$MSSubClass == 20 ~ 'Newer',
data_f$MSSubClass == 60 ~ 'Newer',
data_f$MSSubClass == 120 ~ 'Newer',
data_f$MSSubClass == 160 ~ 'Newer',
data_f$MSSubClass == 30 ~ 'Older',
data_f$MSSubClass == 70 ~ 'Older',
TRUE ~ 'NoAgeDifferentiation'  ))
data_fg$MSZoning<-as.factor(case_when(data_f$MSZoning ==  "C (all)"  ~ "C (all)",
data_f$MSZoning =="FV" ~ "FV",
data_f$MSZoning %in% c("RL","RP") ~ "RL/RP",
TRUE ~'Other'))
data_fg$MSZoning <-fct_reorder(data_fg$MSZoning, data_fg$SalePrice)
data_fg<-cbind(data_fg, data_f[,4:7])
data_fg$LotShape<-as.factor(case_when(data_f$LotShape == "Reg" ~ "Reg",
TRUE ~ "Irreg"))
data_fg$LandContour<- as.factor(case_when(data_f$LandContour == "HLS" ~ "Other",
data_f$LandContour == "Low" ~ "Other",
TRUE ~ data_f$LandContour))
#Discard Utilities
data_fg$LotConfig <- as.factor(data_f$LotConfig)
data_fg$LandSlope<-as.factor(case_when(data_f$LandSlope == "Gtl" ~ "Gtl",
TRUE ~ "Sloped"))
data_fg$Neighborhood <- as.factor(data_f$Neighborhood)
data_fg$Condition1 <- case_when(
substring(data_f$Condition1,1,3) == "RRN" ~ "RRN",
substring(data_f$Condition1,1,3) == "RRA" ~ "RRA",
TRUE ~ substring(data_f$Condition1,1,3)
)
data_fg$Condition2 <- case_when(
data_f$Condition2 == "Norm" ~ "2Nor",
substring(data_f$Condition2,1,3) == "Pos" ~ "3Pos",
TRUE ~ "1Neg"
)
data_fg$ConComb<-paste(data_fg$Condition1 , data_fg$Condition2, sep = "_")
data_fg$BldgType<-as.factor(data_f$BldgType)
data_fg$Stories<-as.factor(case_when(data_f$HouseStyle == "1Story" ~ "1.0",
data_f$HouseStyle == "1.5Fin" ~ "1.5",
data_f$HouseStyle =="1.5Unf" ~ "1.5",
data_f$HouseStyle == "2Story" ~ "2.0",
data_f$HouseStyle == "2.5Fin" ~ "2.5",
data_f$HouseStyle == "2.5Unf" ~ "2.5",
TRUE ~ 'Other'  ))
data_fg$YearBuilt<-data_f$YearBuilt
data_fg$AgeOfHse<-year(now()) - data_f$YearBuilt
data_fg$YearRemodAdd<-case_when(data_f$YearRemodAdd<=data_f$YearBuilt ~ data_f$YearBuilt,
TRUE ~ data_f$YearRemodAdd)
data_fg$YrsSRemod<-year(now()) - data_fg$YearRemodAdd
data_fg$RemodYN<- as.factor(case_when(data_fg$YearRemodAdd==data_fg$YearBuilt ~ "Y",
TRUE ~ "N"))
data_fg$RoofStyle<- as.factor(data_f$RoofStyle)
data_fg$RoofMatl<-as.factor(case_when(data_f$RoofMatl == "CompShg" ~ "CompShg",
TRUE ~ "Other"))
data_fg$Exterior1st<-as.factor(case_when(data_f$Exterior1st %in% c("AsphShn","BrkComm","CBlock", "ImStucc", "Other", "PreCast", "Stone") ~ "Other",
is.na(data_f$Exterior1st) ~ "Other",
TRUE ~ data_f$Exterior1st)
)
data_fg$Exterior2nd<-as.factor(case_when(data_f$Exterior2nd %in% c("AsphShn","BrkComm","CBlock", "ImStucc", "Other", "PreCast", "Stone", "WdShing") ~ "Other",
is.na(data_f$Exterior2nd) ~ "Other",
TRUE ~ data_f$Exterior2nd)
)
data_fg$Ext_Concat<-as.factor(paste(str_trim(data_fg$Exterior1st),
str_trim(data_fg$Exterior2nd), sep="_"))
data_fg$CntExtFin<- case_when(data_f$Exterior1st==data_fg$Exterior2nd ~ 1 ,
TRUE ~ 2)
data_fg$MasVnrType<- as.factor(data_f$MasVnrType)
data_fg$MasVnrArea<- case_when((is.na(data_f$MasVnrArea)==TRUE &
data_f$MasVnrType =="None") ~ 0,
TRUE ~ data_f$MasVnrArea)
data_fg<-cbind(data_fg, data_f[,c("ExterQual","ExterCond")])
data_fg$Foundation<- as.factor(
case_when(data_f$Foundation %in% c("BrkTil", "CBlock", "PConc") ~ data_f$Foundation,
TRUE ~ "Other"
))
data_fg<-cbind(data_fg,data_f[,c(31:39, 48,49)])
data_fg$BsmtGenInfo<-case_when(data_fg$BsmtQual=="None" ~ "NoBsmt",
(data_fg$BsmtQual %in% c("Ex", "Gd", "TA") &
data_fg$BsmtFullBath > 0 &
(data_fg$BsmtFinType1 %in% c("GLQ", "ALQ") |
data_fg$BsmtFinType2 %in% c("GLQ","ALQ"))) ~ "RentBsmt",
(data_fg$BsmtQual %in% c("Ex", "Gd", "TA") &
data_fg$BsmtCond %in% c("Ex", "Gd", "TA") &
(data_fg$BsmtHalfBath+ data_fg$BsmtFullBath) > 0)  ~ "SelfConRecS",
(data_fg$BsmtFinType1 == "Rec" | data_fg$BsmtFinType2 == "Rec") ~ "RecSpace",
(data_fg$BsmtQual %in% c("Ex", "Gd", "TA") &
data_fg$BsmtCond %in% c("Ex", "Gd", "TA") &
(data_fg$BsmtFinType1 %in% c("GLQ", "ALQ") |
data_fg$BsmtFinType2 %in% c("GLQ","ALQ"))) ~ "RecSpace",
data_fg$BsmtUnfSF == data_fg$TotalBsmtSF ~ "UnfOnly",
TRUE ~ "NWSO") #Needs work storage only
data_fg$BsmtGenInfo <-fct_reorder(data_fg$BsmtGenInfo, data_fg$SalePrice)
data_fg$CentralAir<-data_f$CentralAir
data_fg$Heating<-case_when(data_f$Heating == "GasA" ~ "GasA",
TRUE ~ "Other")
data_fg$HeatingQC<-as.factor(case_when(data_f$HeatingQC %in% c("Po", "Fa") ~ "PoFa",
TRUE ~ data_f$HeatingQC))
data_fg$HeatingQC<-fct_reorder(data_fg$HeatingQC, data_fg$SalePrice)
data_fg$Electrical <- case_when(data_f$Electrical %in%
c("SBrkr", "FuseA") ~ data_f$Electrical,
TRUE~"Other")
data_fg<-cbind(data_fg, data_f[,c(44:47,50:53)])
data_fg$KitchenQual<-fct_reorder(as.factor(case_when(data_f$KitchenQual %in% c("Ex", "Gd", "TA") ~data_f$KitchenQual,
TRUE ~ "FaOrLess")),data_fg$SalePrice)
data_fg$Functional<-case_when(data_f$Functional =="TA" ~ "TA",
TRUE ~ "Dedctns")
data_fg<-cbind(data_fg, data_f[,(57:58)])
data_fg$GarageType<-case_when(is.na(data_f$GarageYrBlt)==TRUE ~ "None",
TRUE ~ data_f$GarageType)
data_fg$GarageYrBlt<-case_when(data_f$GarageYrBlt > data_f$YrSold ~ data_f$YrSold,
is.na(data_f$GarageYrBlt) == TRUE ~ (year(now())+1),
TRUE ~data_f$GarageYrBlt)
data_fg<-cbind(data_fg, data_f[,61:65])
####
data_fg$SaleType<-as.factor(case_when(data_f$SaleType == 'COD' ~ 'COD',
data_f$SaleType == 'Con' ~ 'GCon', #Contract grouped
data_f$SaleType == 'ConLw' ~ 'GCon',
data_f$SaleType == 'ConLI' ~ 'GCon',
data_f$SaleType == 'ConLD' ~ 'GCon',
data_f$SaleType == 'New' ~ 'New',
data_f$SaleType == 'WD' ~ 'GWD',
data_f$SaleType == 'CWD' ~ 'GWD',
data_f$SaleType == 'VWD' ~ 'GWD',
TRUE ~'Other'
))
data_fg$SaleType<-(fct_reorder(data_fg$SaleType, data_fg$SalePrice))
#Basement variables give two big insights; whether there is one and
#if it can be used as a rental unit
####
chr <- sapply(data_fg, is.character)
colS<-names(data_fg[,chr])
str(data_fg)
data_fg[,colS]<-lapply(data_fg[,colS],factor)
str(data_fg)
remove(colS)
#create_report(data_fg)
plot_missing(data_fg)
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$PavedDrive
yy=data_f$SalePrice
summary(xx)
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
gar<-data_f[,c(66:81)]
plot_missing(gar)
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$WoodDeckSF
yy=data_f$SalePrice
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$OpenPorchSf
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$OpenPorchSF
yy=data_f$SalePrice
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$EnclosedPorch
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$X3SsnPorch
yy=data_f$SalePrice
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
subset(data_f, is.na(X3SsnPorch)== TRUE )
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$ScreenPorch
yy=data_f$SalePrice
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
names(data_f)
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$PoolQC
yy=data_f$SalePrice
summary(xx)
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
#x2 = data_f$HeatingQC
ggplot(data, aes(x=PoolArea))+
geom_bar()
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$PoolArea
yy=data_f$SalePrice
summary(xx)
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$Fence
yy=data_f$SalePrice
summary(xx)
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$MiscFeature
yy=data_f$SalePrice
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$MiscValue
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$MiscVal
yy=data_f$SalePrice
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
ggplot(data = data_f, aes(x=xx, y= yy))+
geom_point(aes(x=xx, y= yy), col= "blue")+
#  geom_point(aes(x=x2, y= yy), col="red", shape =0)+
geom_smooth()
names(data_f)
#xx=fct_reorder(as.factor(data_f$FireplaceQu),data_f$SalePrice)
xx=data_f$SaleCondition
yy=data_f$SalePrice
summary(xx)
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
xx=fct_reorder(as.factor(data_f$SaleCondition),data_f$SalePrice)
#xx=data_f$SaleCondition
yy=data_f$SalePrice
summary(xx)
####DELETE HERE
a<-ggplot(data=data_f, aes(x=xx, y=yy))+
geom_boxplot()+
ggtitle(xx)
b<-ggplot(data=data_f, aes(x=xx))+
geom_bar()+
geom_text(aes(label = ..count..), stat = "count")
plot_grid(a,b,ncol = 1,nrow=2)
data_fg$SaleCondition<-case_when(data_f$SaleCondition %in% c("Normal", "Partial") ~ data_f$SaleCondition , TRUE ~ "Other" )
options(scipen=999) ###No scientific notifications
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message =  FALSE)
options(scipen=999) ###No scientific notifications
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message =  FALSE)
##clean out the space
rm(list=ls())
options(scipen=999)
##What do we need
library(tidyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(cowplot) # plot different ggplots next to each other
library(DataExplorer) # Best EDA package by far
library(corrplot)
library(pscl) # For Pseudo R squareds on GLMS
#Where will we work
#getwd()
setwd("C:/Users/helen/Documents/Kaggle/HousePrice/KaggleHousing")
